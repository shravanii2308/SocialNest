{"ast":null,"code":"import{PersonAddOutlined,PersonRemoveOutlined}from\"@mui/icons-material\";import{Box,IconButton,Typography,useTheme}from\"@mui/material\";import{useDispatch,useSelector}from\"react-redux\";import{useNavigate}from\"react-router-dom\";import{setFriends}from\"state\";import FlexBetween from\"./FlexBetween\";import UserImage from\"./UserImage\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Friend=_ref=>{let{friendId,name,subtitle,userPicturePath}=_ref;const dispatch=useDispatch();const navigate=useNavigate();const{_id}=useSelector(state=>state.user);const token=useSelector(state=>state.token);const friends=useSelector(state=>state.user.friends);const{palette}=useTheme();const primaryLight=palette.primary.light;const primaryDark=palette.primary.dark;const main=palette.neutral.main;const medium=palette.neutral.medium;const isFriend=friends.find(friend=>friend._id===friendId);const patchFriend=async()=>{const response=await fetch(`${window.location.origin}/users/${_id}/${friendId}`,{method:\"PATCH\",headers:{Authorization:`Bearer ${token}`,\"Content-Type\":\"application/json\"}});const data=await response.json();dispatch(setFriends({friends:data}));};return/*#__PURE__*/_jsxs(FlexBetween,{children:[/*#__PURE__*/_jsxs(FlexBetween,{gap:\"1rem\",children:[/*#__PURE__*/_jsx(UserImage,{image:userPicturePath,size:\"55px\"}),/*#__PURE__*/_jsxs(Box,{onClick:()=>{navigate(`/profile/${friendId}`);navigate(0);},children:[/*#__PURE__*/_jsx(Typography,{color:main,variant:\"h5\",fontWeight:\"500\",sx:{\"&:hover\":{color:palette.primary.light,cursor:\"pointer\"}},children:name}),/*#__PURE__*/_jsx(Typography,{color:medium,fontSize:\"0.75rem\",children:subtitle})]})]}),/*#__PURE__*/_jsx(IconButton,{onClick:()=>patchFriend(),sx:{backgroundColor:primaryLight,p:\"0.6rem\"},children:isFriend?/*#__PURE__*/_jsx(PersonRemoveOutlined,{sx:{color:primaryDark}}):/*#__PURE__*/_jsx(PersonAddOutlined,{sx:{color:primaryDark}})})]});};export default Friend;","map":{"version":3,"names":["PersonAddOutlined","PersonRemoveOutlined","Box","IconButton","Typography","useTheme","useDispatch","useSelector","useNavigate","setFriends","FlexBetween","UserImage","jsx","_jsx","jsxs","_jsxs","Friend","_ref","friendId","name","subtitle","userPicturePath","dispatch","navigate","_id","state","user","token","friends","palette","primaryLight","primary","light","primaryDark","dark","main","neutral","medium","isFriend","find","friend","patchFriend","response","fetch","window","location","origin","method","headers","Authorization","data","json","children","gap","image","size","onClick","color","variant","fontWeight","sx","cursor","fontSize","backgroundColor","p"],"sources":["C:/vscode/DEVELOPMENT/SocialNest/client/src/components/Friend.jsx"],"sourcesContent":["import { PersonAddOutlined, PersonRemoveOutlined } from \"@mui/icons-material\";\r\nimport { Box, IconButton, Typography, useTheme } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setFriends } from \"state\";\r\nimport FlexBetween from \"./FlexBetween\";\r\nimport UserImage from \"./UserImage\";\r\n\r\nconst Friend = ({ friendId, name, subtitle, userPicturePath }) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { _id } = useSelector((state) => state.user);\r\n  const token = useSelector((state) => state.token);\r\n  const friends = useSelector((state) => state.user.friends);\r\n\r\n  const { palette } = useTheme();\r\n  const primaryLight = palette.primary.light;\r\n  const primaryDark = palette.primary.dark;\r\n  const main = palette.neutral.main;\r\n  const medium = palette.neutral.medium;\r\n\r\n  const isFriend = friends.find((friend) => friend._id === friendId);\r\n\r\n  const patchFriend = async () => {\r\n    const response = await fetch(\r\n      `${window.location.origin}/users/${_id}/${friendId}`,\r\n      {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    dispatch(setFriends({ friends: data }));\r\n  };\r\n\r\n  return (\r\n    <FlexBetween>\r\n      <FlexBetween gap=\"1rem\">\r\n        <UserImage image={userPicturePath} size=\"55px\" />\r\n        <Box\r\n          onClick={() => {\r\n            navigate(`/profile/${friendId}`);\r\n            navigate(0);\r\n          }}\r\n        >\r\n          <Typography\r\n            color={main}\r\n            variant=\"h5\"\r\n            fontWeight=\"500\"\r\n            sx={{\r\n              \"&:hover\": {\r\n                color: palette.primary.light,\r\n                cursor: \"pointer\",\r\n              },\r\n            }}\r\n          >\r\n            {name}\r\n          </Typography>\r\n          <Typography color={medium} fontSize=\"0.75rem\">\r\n            {subtitle}\r\n          </Typography>\r\n        </Box>\r\n      </FlexBetween>\r\n      <IconButton\r\n        onClick={() => patchFriend()}\r\n        sx={{ backgroundColor: primaryLight, p: \"0.6rem\" }}\r\n      >\r\n        {isFriend ? (\r\n          <PersonRemoveOutlined sx={{ color: primaryDark }} />\r\n        ) : (\r\n          <PersonAddOutlined sx={{ color: primaryDark }} />\r\n        )}\r\n      </IconButton>\r\n    </FlexBetween>\r\n  );\r\n};\r\n\r\nexport default Friend;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}