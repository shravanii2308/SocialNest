{"ast":null,"code":"import React from\"react\";import ReactDOM from\"react-dom/client\";import\"./index.css\";import App from\"./App\";import authReducer from\"./state\";import{configureStore}from\"@reduxjs/toolkit\";import{Provider}from\"react-redux\";import{persistStore,persistReducer,FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER}from\"redux-persist\";import storage from\"redux-persist/lib/storage\";import{PersistGate}from\"redux-persist/integration/react\";import{jsx as _jsx}from\"react/jsx-runtime\";const persistConfig={key:\"root\",storage,version:1};const persistedReducer=persistReducer(persistConfig,authReducer);const store=configureStore({reducer:persistedReducer,middleware:getDefaultMiddleware=>getDefaultMiddleware({serializableCheck:{ignoreActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}})});const root=ReactDOM.createRoot(document.getElementById(\"root\"));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(PersistGate,{loading:null,persistor:persistStore(store),children:/*#__PURE__*/_jsx(App,{})})})}));","map":{"version":3,"names":["React","ReactDOM","App","authReducer","configureStore","Provider","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","PersistGate","jsx","_jsx","persistConfig","key","version","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoreActions","root","createRoot","document","getElementById","render","StrictMode","children","loading","persistor"],"sources":["C:/vscode/DEVELOPMENT/SocialNest/client/src/index.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport authReducer from \"./state\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { Provider } from \"react-redux\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nconst persistConfig = { key: \"root\", storage, version: 1 };\r\nconst persistedReducer = persistReducer(persistConfig, authReducer);\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoreActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistStore(store)}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,aAAa,CACpB,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,CAAAC,WAAW,KAAM,SAAS,CACjC,OAASC,cAAc,KAAQ,kBAAkB,CACjD,OAASC,QAAQ,KAAQ,aAAa,CACtC,OACEC,YAAY,CACZC,cAAc,CACdC,KAAK,CACLC,SAAS,CACTC,KAAK,CACLC,OAAO,CACPC,KAAK,CACLC,QAAQ,KACH,eAAe,CACtB,MAAO,CAAAC,OAAO,KAAM,2BAA2B,CAC/C,OAASC,WAAW,KAAQ,iCAAiC,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9D,KAAM,CAAAC,aAAa,CAAG,CAAEC,GAAG,CAAE,MAAM,CAAEL,OAAO,CAAEM,OAAO,CAAE,CAAE,CAAC,CAC1D,KAAM,CAAAC,gBAAgB,CAAGd,cAAc,CAACW,aAAa,CAAEf,WAAW,CAAC,CACnE,KAAM,CAAAmB,KAAK,CAAGlB,cAAc,CAAC,CAC3BmB,OAAO,CAAEF,gBAAgB,CACzBG,UAAU,CAAGC,oBAAoB,EAC/BA,oBAAoB,CAAC,CACnBC,iBAAiB,CAAE,CACjBC,aAAa,CAAE,CAACnB,KAAK,CAAEC,SAAS,CAAEC,KAAK,CAAEC,OAAO,CAAEC,KAAK,CAAEC,QAAQ,CACnE,CACF,CAAC,CACL,CAAC,CAAC,CAEF,KAAM,CAAAe,IAAI,CAAG3B,QAAQ,CAAC4B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CACjEH,IAAI,CAACI,MAAM,cACTf,IAAA,CAACjB,KAAK,CAACiC,UAAU,EAAAC,QAAA,cACfjB,IAAA,CAACZ,QAAQ,EAACiB,KAAK,CAAEA,KAAM,CAAAY,QAAA,cACrBjB,IAAA,CAACF,WAAW,EAACoB,OAAO,CAAE,IAAK,CAACC,SAAS,CAAE9B,YAAY,CAACgB,KAAK,CAAE,CAAAY,QAAA,cACzDjB,IAAA,CAACf,GAAG,GAAE,CAAC,CACI,CAAC,CACN,CAAC,CACK,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}